import { Typography } from 'antd'
import cx from 'classnames'
import React from 'react'
import styles from './ModelsPopover.module.scss'
import { iconsProviderMapping } from '@/containers/Sidebar/iconsProviderMapping'
import useGenerateContent from '@/hooks/useGenerateContent'
import { AIProvider } from '@/model/ui'
import { useMicioStore } from '@/store'
import { ModelsList } from '@/utils/constants'


interface ModelsPopoverProps {
  activeApisConfig: Record<AIProvider, string>
}

export const ModelsPopover = ({ activeApisConfig }: ModelsPopoverProps) => {

    const {
      chat: {
        selectedModel,
      },
    } = useMicioStore()

  const { changeModel } = useGenerateContent()

  const { Title } = Typography

  /*
  * This function maps the AIProvider enum to a human-readable label.
  * It is used to display the provider name in the UI.
  * The labels are defined in the labelsMap object.
  * The keys of the object are the enum values, and the values are the corresponding labels.
  */
  const labelsMap = {
    [AIProvider.GEMINI]: 'Gemini',
    [AIProvider.OPENAI]: 'Open AI',
    [AIProvider.DEEPSEEK]: 'DeepSeek',
    [AIProvider.MISTRAL]: 'Mistral',
    [AIProvider.PERPLEXITY]: 'Perplexity',
  }

  /*
  * This function returns a list of models for a given provider.
  * It filters the ModelsList based on the provider and maps it to a list of paragraphs.
  * Each paragraph has an onClick event that changes the model when clicked.
  * The selected model is highlighted with a different style.
  */
  const getModelsListByProvider = (provider: AIProvider) => {
    const models = ModelsList.filter((model) => model.provider === provider)
    return models.map((model) => (
      <p
        onClick={() => changeModel(model)}
        className={cx(styles.PopoverItem, { [styles.Selected]: selectedModel?.name === model.name })}
        key={model.name}>
        {model.displayName}
      </p>
    ))
  }

  /*
  * This function creates the UI for each provider group in the popover.
  * It includes the provider name, icon, and the list of models.
  * The provider name and icon are displayed in a header.
  * The list of models is generated by calling getModelsListByProvider.
  */
  const popoverUI = (key: AIProvider) => (
    <div className = {styles.ProviderGroup } >
      <div className={styles.ProviderHeader}>
        <Title level={3}>{labelsMap[key]}</Title>
        {iconsProviderMapping[key].icon}
      </div>
      {getModelsListByProvider(key) }
      </div >
  )

  return (
    <div className={styles.PopoverContent}>
      {Object.entries(activeApisConfig)
      .filter(([, value]) => value.trim() !== '')
      .map(([key]) => popoverUI(key as AIProvider))}
    </div>
  )
}
